/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "BkgRooDoubleErfDijetFunction.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooDoubleErfDijetFunction) 

 RooDoubleErfDijetFunction::RooDoubleErfDijetFunction( const char *name, 
				   const char *title, 
				   RooAbsReal& _x,
				   RooAbsReal& _k1,
				   RooAbsReal& _k2,
				   RooAbsReal& _m1,
				   RooAbsReal& _w1,
				   RooAbsReal& _m2,
				   RooAbsReal& _w2 ) : 
RooAbsPdf(name,title),
  x("x","x",this,_x), 
  k1("k1","k1",this,_k1), 
  k2("k2","k2",this,_k2),
  m1("m1","m1",this,_m1),
  w1("w1","w1",this,_w1),
  m2("m2","m2",this,_m2),
  w2("w2","w2",this,_w2)
 { 
 } 


 RooDoubleErfDijetFunction::RooDoubleErfDijetFunction(const RooDoubleErfDijetFunction& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   k1("k1",this,other.k1),
   k2("k2",this,other.k2),
   m1("m1",this,other.m1),
   w1("w1",this,other.w1),
   m2("m2",this,other.m2),
   w2("w2",this,other.w2)
 { 
 } 



 Double_t RooDoubleErfDijetFunction::evaluate() const 
 { 
   double erf1 = 1. - 1./( 1+exp((x-m1)/w1) );
   double erf2 = 1. - 1./( 1+exp((x-m2)/w2) );

   return erf1*erf2*pow(x,k1*(1.-log(x)))*pow(x,k2*log(x)) ;

   // return pow(x, k1) * pow(x, k2 * log(x));
 } 



